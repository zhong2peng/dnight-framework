package stream;

import java.security.SecureRandom;
import java.util.Arrays;
import java.util.stream.IntStream;
import java.util.stream.Stream;

/**
 * @author ZHONGPENG769
 * @date 2019/7/11
 */
public class Stream13 {

    public static void main(String[] args) {
        //在安全应用场景，随机数应该使用安全的随机数。密码学意义上的安全随机数，要求必须保证其不可预测性。
        SecureRandom secureRandom = new SecureRandom(new byte[]{1, 3, 3, 7});
        int[] randoms = IntStream.generate(secureRandom::nextInt)
                .filter(n -> n > 0)
                .limit(10)
                .toArray();
        System.out.println(Arrays.toString(randoms));

        //A seed is the first element of the stream. The second element is generated by applying the function to the first element
        int[] nums = IntStream.iterate(1, n -> n * 2)
                .limit(11)
                .toArray();
        System.out.println(Arrays.toString(nums));

        Stream.iterate(5, num -> num + 1).limit(10).forEach(s -> System.out.print(s + ", "));
    }
}
